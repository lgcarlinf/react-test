/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as PokemonPokemonIdImport } from './routes/pokemon/$pokemonId'

// Create Virtual Routes

const FavoritosIndexLazyImport = createFileRoute('/favoritos/')()

// Create/Update Routes

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const FavoritosIndexLazyRoute = FavoritosIndexLazyImport.update({
  path: '/favoritos/',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/favoritos/index.lazy').then((d) => d.Route),
)

const PokemonPokemonIdRoute = PokemonPokemonIdImport.update({
  path: '/pokemon/$pokemonId',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/pokemon/$pokemonId': {
      id: '/pokemon/$pokemonId'
      path: '/pokemon/$pokemonId'
      fullPath: '/pokemon/$pokemonId'
      preLoaderRoute: typeof PokemonPokemonIdImport
      parentRoute: typeof rootRoute
    }
    '/favoritos/': {
      id: '/favoritos/'
      path: '/favoritos'
      fullPath: '/favoritos'
      preLoaderRoute: typeof FavoritosIndexLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/pokemon/$pokemonId': typeof PokemonPokemonIdRoute
  '/favoritos': typeof FavoritosIndexLazyRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/pokemon/$pokemonId': typeof PokemonPokemonIdRoute
  '/favoritos': typeof FavoritosIndexLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/pokemon/$pokemonId': typeof PokemonPokemonIdRoute
  '/favoritos/': typeof FavoritosIndexLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/pokemon/$pokemonId' | '/favoritos'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/pokemon/$pokemonId' | '/favoritos'
  id: '__root__' | '/' | '/pokemon/$pokemonId' | '/favoritos/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  PokemonPokemonIdRoute: typeof PokemonPokemonIdRoute
  FavoritosIndexLazyRoute: typeof FavoritosIndexLazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  PokemonPokemonIdRoute: PokemonPokemonIdRoute,
  FavoritosIndexLazyRoute: FavoritosIndexLazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/pokemon/$pokemonId",
        "/favoritos/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/pokemon/$pokemonId": {
      "filePath": "pokemon/$pokemonId.tsx"
    },
    "/favoritos/": {
      "filePath": "favoritos/index.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
